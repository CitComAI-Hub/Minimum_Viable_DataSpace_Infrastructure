keycloak:
  enabled: ${services_enabled.keycloak}
  fullnameOverride: ${keycloak_host_name}
  service:
    ports:
      http: 8080
  ingress:
    enabled: ${ingress_enabled.keycloak}
    ingressClassName: ${ingress_class}
    hostname: ${keycloak_domain}
    annotations:
      # forcing everything to use ssl
      ingress.kubernetes.io/ssl-redirect: "true"
      # example annotations, allowing cert-manager to automatically create tls-certs
      kubernetes.io/tls-acme: "true"
    tls: ${ingress_tls_enabled.keycloak}
    extraTls:
      - hosts:
          - ${keycloak_domain}
        secretName: ${keycloak_secret_tls}

  # authentication config for keycloak
  auth:
    existingSecret: ${iss_secret}
    adminUser: ${keycloak_config.user_key}
    passwordSecretKey: ${keycloak_config.pass_key}
  # should the db be deployed as part of the keycloak chart
  postgresql:
    enabled: false
  # host of the external db to be used
  externalDatabase:
    host: ${postgresql_host_name}
    user: ${postgresql_config.user_name} #postgres
    database: ${keycloak_config.postgres_db} #keycloak
    existingSecret: ${postgresql_config.secret} #database-secret
    existingSecretPasswordKey: ${postgresql_secrect_key_adminpass} #postgres-admin-password

  # the default init container is deactivated, since it conflicts with the n
  # on-bitnami image.
  # enableDefaultInitContainers: false

  extraVolumeMounts:
    - name: did-material
      mountPath: /did-material
    - name: did-material
      mountPath: "/etc/env"
      readOnly: true

  extraVolumes:
    - name: did-material
      emptyDir: {}

  command:
    - /bin/bash
  args:
    - -ec
    - |
      #!/bin/sh
      export $(cat /did-material/did.env)
      export KC_HOSTNAME=${keycloak_domain}
      /opt/bitnami/scripts/keycloak/entrypoint.sh
      /opt/bitnami/scripts/keycloak/run.sh

  # extra env vars to be set. we require them at the moment, since some of the
  # chart config mechanisms only work with the bitnami-image
  extraEnvVars:
    - name: KEYCLOAK_EXTRA_ARGS
      value: "--import-realm"
    - name: KC_FEATURES
      value: "oid4vc-vci"
    # indicates ssl is terminated at the edge
    - name: KC_PROXY
      value: "edge"
    # password for reading the key store connected to the did
    - name: STORE_PASS
      valueFrom:
        secretKeyRef:
          name: ${iss_secret}
          key: store-pass
    # keycloak admin password
    - name: KC_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: ${iss_secret}
          key: ${keycloak_config.pass_key}

  initContainers:
    - name: get-did
      image: ubuntu
      command:
        - /bin/bash
      args:
        - -ec
        - |
          #!/bin/bash
          apt-get -y update; apt-get -y install wget; apt-get -y install sed;
          # Get the did from local did-helper:
          cd /did-material
          wget http://${did_host_name}:3001/did-material/cert.pfx
          wget http://${did_host_name}:3001/did-material/did.env
          echo "" >> /did-material/did.env
      volumeMounts:
        - name: did-material
          mountPath: /did-material

  realm:
    import: false
